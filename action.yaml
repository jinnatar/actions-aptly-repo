---
name: "Aptly deb repo creator"
author: "Jinna Kiisuo <jinnak@nocturnal.fi>"
description: |
  Create ad-hoc deb repositories into GitHub artifacts.
  These can be published onwards into GitHub Pages.

inputs:
  repository:
    description: "Repository name to create."
    required: true
    default: "debian"
  distribution:
    description: "Distro the repo will target."
    required: true
    default: "debian"
  component:
    description: "Component name, for example stable or dev."
    required: true
    default: "stable"
  archs:
    description: |
      Architectures to enable, comma separated. e.g. amd64,arm64
    required: true
    default: "amd64"
  glob:
    description: |
      Filesystem glob of debs or directories of debs to add to the repo.
    required: true
    default: "./"
  gpg_key_id:
    description: |
      ID of the GPG public key to use for signing.
      Useful for definining a signing specific subkey.
    required: true
    default: ""

  GITHUB_TOKEN:
    description: |
      A GitHub token, available in the secrets.GITHUB_TOKEN working-directory variable.
    default: ${{ github.token }}
  gpg_private_key:
    description: Armored gpg private key to sign the repo with.
    required: true
  passphrase:
    description: The passphrase of the provided GPG key.
    required: true

runs:
  using: composite
  steps:
    - name: Add this action's path to PATH
      shell: bash
      run: echo "${{ github.action_path }}" >> $GITHUB_PATH
    - name: Install Aptly
      uses: eth-pkg/apt-deb-cache@v0.2.6
      with:
        packages: "aptly"
    - name: Create repository
      shell: bash
      run: "aptly repo create -architectures='${{ inputs.archs }}' ${{ inputs.repository }}"
    - name: Add debs
      shell: bash
      run: "aptly repo add ${{ inputs.repository }} ${{ inputs.glob }}"
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: "${{ inputs.gpg_private_key }}"
        passphrase: "${{ inputs.passphrase }}"
    - name: Sign & publish repo
      shell: bash
      run: |
        aptly publish repo \
          -distribution "${{ inputs.distribution }}" \
          -component "${{ inputs.component }}" \
          "${{ inputs.repository }}"
